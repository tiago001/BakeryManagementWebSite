// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPFBakery.Models;

namespace BakeryManagement.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191029002148_CriarBanco")]
    partial class CriarBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WPFBakery.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("WPFBakery.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("WPFBakery.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("Nome");

                    b.Property<DateTime>("PrazoValidade");

                    b.Property<double>("Preco");

                    b.Property<double>("Quantidade");

                    b.Property<int?>("ReceitaId");

                    b.Property<string>("Unidade");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("WPFBakery.Models.ProdutoFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Custo");

                    b.Property<DateTime>("PrazoValidade");

                    b.Property<double>("Preco");

                    b.Property<int?>("ReceitaId");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.ToTable("ProdutosFinais");
                });

            modelBuilder.Entity("WPFBakery.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<string>("Rendimento");

                    b.Property<int>("TempoDePreparo");

                    b.HasKey("Id");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("WPFBakery.Models.Produto", b =>
                {
                    b.HasOne("WPFBakery.Models.Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("WPFBakery.Models.Receita")
                        .WithMany("Ingredientes")
                        .HasForeignKey("ReceitaId");
                });

            modelBuilder.Entity("WPFBakery.Models.ProdutoFinal", b =>
                {
                    b.HasOne("WPFBakery.Models.Receita", "Receita")
                        .WithMany()
                        .HasForeignKey("ReceitaId");
                });
#pragma warning restore 612, 618
        }
    }
}
